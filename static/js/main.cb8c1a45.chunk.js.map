{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","services/getUser.tsx","components/Addtodoform/AddTodoForm.tsx","services/getTodoId.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","cn","completed","title","TodoList","todos","map","username","getUserByID","userId","usersFromServer","find","AddTodoFrom","onAdd","useState","setTitle","setUserId","hasUserIdError","setHasUserIdError","hasTitleError","setHasTitleError","onSubmit","event","preventDefault","action","method","type","placeholder","value","onChange","target","Number","getNewPostId","Math","max","currentTodos","flatMap","App","savedTodos","localStorage","getItem","JSON","parse","setTodos","useEffect","setItem","stringify","data","newTodo","currentTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb8c1a45.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo',\n        { 'TodoInfo--completed': todo.completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos\n      .map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\n\nexport function getUserByID(userId: number) {\n  return usersFromServer.find((user => user.id === userId))\n    || null;\n}\n","import { useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport usersFromServer from '../../api/users';\nimport { getUserByID } from '../../services/getUser';\n\ntype Props = {\n  onAdd: (todo: Todo) => void;\n};\n\nexport const AddTodoFrom: React.FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n\n    setHasUserIdError(false);\n    setHasTitleError(false);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(Number(event.target.value));\n    setHasUserIdError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasUserIdError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    onAdd({\n      id: 0,\n      title,\n      completed: false,\n      userId,\n      user: getUserByID(userId),\n    });\n\n    reset();\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      action=\"/api/todos\"\n      method=\"POST\"\n    >\n      <div className=\"field\">\n        <input\n          type=\"text\"\n          placeholder=\"Input title\"\n          data-cy=\"titleInput\"\n          value={title}\n          onChange={handleTitleChange}\n        />\n        {hasTitleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <select\n          data-cy=\"userSelect\"\n          value={userId}\n          onChange={handleUserChange}\n        >\n          <option value=\"0\">Choose a user</option>\n          {usersFromServer.map(user => (\n            <option\n              value={user.id}\n              key={user.id}\n            >\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {hasUserIdError && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import { Todo } from '../types/Todo';\n\nexport const getNewPostId = (todos: Todo[]) => {\n  const maxId = Math.max(...todos.map(todo => todo.id));\n\n  return maxId + 1;\n};\n","import { useState, useEffect } from 'react';\nimport './App.scss';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { AddTodoFrom } from './components/Addtodoform';\nimport { Todo } from './types/Todo';\nimport { getUserByID } from './services/getUser';\nimport { getNewPostId } from './services/getTodoId';\n\nexport const currentTodos = todosFromServer.flatMap(todo => ({\n  ...todo,\n  user: getUserByID(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(() => {\n    const savedTodos = localStorage.getItem('todos');\n\n    return savedTodos ? JSON.parse(savedTodos) : [...currentTodos];\n  });\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  const addTodo = ({ id, ...data }: Todo) => {\n    const newTodo = {\n      id: getNewPostId(todos),\n      ...data,\n    };\n\n    setTodos(currentTodo => [...currentTodo, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <AddTodoFrom\n        onAdd={addTodo}\n      />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}